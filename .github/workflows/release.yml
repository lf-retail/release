name: release
on:
  workflow_dispatch:
    inputs:
      app:
        type: boolean
        description: Deploy App
      database:
        type: boolean
        description: Deploy database
      releaseNo:
        type: string
        description: Version Number

env:
  Workflow2_PAT_TOKEN_GITHUB: "${{ secrets.Workflow2_PAT_TOKEN_GITHUB }}"  
  GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

jobs:

  create_release_branch:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        repository: "lf-retail/app-service"
        ref: 'refs/heads/Dev'
      env:
          Workflow2_PAT_TOKEN_GITHUB: $Workflow2_PAT_TOKEN_GITHUB
      
    - name: Create Release Branch
      run: |
        RELEASE_BRANCH_NAME=release/r-${{ github.event.inputs.releaseNo }}
        git checkout -b $RELEASE_BRANCH_NAME
        git push --set-upstream origin $RELEASE_BRANCH_NAME
      env:
        GITHUB_TOKEN: $GITHUB_TOKEN

  app-CI-dev:
    if: ${{ github.event.inputs.app =='true' }}
    uses: lf-common-repo/shared-workflow/.github/workflows/java-maven-sonar-ci.yml@main
    with:
      repository: "lf-retail/app-service"
      branch: $RELEASE_BRANCH_NAME
    secrets:
      Workflow2_PAT_TOKEN_GITHUB: $Workflow2_PAT_TOKEN_GITHUB

  database-CI-dev:
     if: ${{ github.event.inputs.database == 'true' }}
     uses: lf-common-repo/shared-workflow/.github/workflows/databaseci.yml@main
     secrets:
          Workflow2_PAT_TOKEN_GITHUB: ${{ secrets.Workflow2_PAT_TOKEN_GITHUB }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}      
  
  app-deploy-dev:
     environment: DEV
     name: App  Deoloyment Dev
     if: ${{ github.event.inputs.app =='true' }}
     runs-on: ubuntu-latest
     steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: deploy App
        run: |
         echo " runing App deployment now "
  database-deploy-dev:
     environment: DEV
     name: Database  Deoloyment Dev
     if: ${{ github.event.inputs.database == 'true' }}
     runs-on: ubuntu-latest
     steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: deploy database
        run: |
         echo " runing database deployment now "
  app-deploy-uat:
     environment: UAT
     name: App  Deoloyment UAT
     if: ${{ github.event.inputs.app =='true' }}
     runs-on: ubuntu-latest
     needs: app-deploy-dev
     steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: deploy App
        run: |
         echo " runing App deployment now "
  database-deploy-uat:
     environment: UAT
     name: Database  Deoloyment UAT
     if: ${{ github.event.inputs.database == 'true' }}
     runs-on: ubuntu-latest
     needs: database-deploy-dev
     steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: deploy database
        run: |
         echo " runing database deployment now "
  app-deploy-PROD:
     environment: PROD
     name: App  Deoloyment PROD
     if: ${{ github.event.inputs.app =='true' }}
     runs-on: ubuntu-latest
     needs: app-deploy-uat
     steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: deploy App
        run: |
         echo " runing App deployment now "
  database-deploy-PROD:
     environment: PROD
     name: Database  Deoloyment PROD
     if: ${{ github.event.inputs.database == 'true' }}
     runs-on: ubuntu-latest
     needs: database-deploy-uat
     steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: deploy database
        run: |
         echo " runing database deployment now "
