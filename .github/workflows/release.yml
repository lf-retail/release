name: Release Pipeline

on:
  workflow_dispatch:

jobs:
  Create-database-CI:
    environment: Dev
    name: Database-CI
    runs-on: ubuntu-latest
    permissions:
        pull-requests: write
        issues: write
        repository-projects: write
    steps:
      - name: Check out code
        uses: actions/checkout@v2

  Database-ci:
    needs: Create-database-CI
    name: Database CI
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Deploy database
        run: |
          echo "Running database deployment now"

  Database-Deploy-DEV:
    needs: Database-ci
    environment: DEV
    name: Database Deployment DEV
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Deploy database
        run: |
          echo "Running database deployment now"

  Database-Deploy-UAT:
    needs: Database-Deploy-DEV
    environment: UAT
    name: Database Deployment UAT
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Deploy database
        run: |
          echo "Running database deployment now"

      - name: Check for rejection
        id: check-rejection
        run: |
          # Your logic to check if the deployment is rejected
          # Set a custom environment variable if rejected
          if [ $DEPLOYMENT_REJECTED == "true" ]; then
            echo "Deployment to UAT rejected, set the rejection flag."
            echo "REJECTION=true" >> $GITHUB_ENV
          fi
        env:
          DEPLOYMENT_REJECTED: ${{ env.DEPLOYMENT_REJECTED }}

      - name: Rollback on Rejection
        if: env.REJECTION == 'true'
        run: |
          echo "Deployment to UAT rejected, initiating rollback..."
          ./rollback.sh
